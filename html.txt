<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pesquisa de Nicho</title>
    <style>
        /* CSS B√°sico */
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background-color: #f4f7f6;
            color: #333;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

        h1 {
            color: #1a1a1a;
            text-align: center;
        }

        /* Formul√°rio de Pesquisa */
        .search-form {
            display: flex;
            gap: 10px;
            margin-bottom: 30px;
        }

        .search-input {
            flex-grow: 1;
            padding: 12px 15px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 6px;
            box-sizing: border-box; /* Garante que o padding n√£o afete a largura */
        }

        .search-button {
            padding: 12px 20px;
            font-size: 16px;
            font-weight: bold;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .search-button:hover {
            background-color: #0056b3;
        }

        /* Indicador de Carregamento */
        .loader {
            display: none; /* Oculto por padr√£o */
            margin: 40px auto;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #007bff;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Container dos Resultados */
        #results-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
        }

        /* Card de V√≠deo ("Caixinha") */
        .video-card {
            background-color: #fff;
            border: 1px solid #eee;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
            overflow: hidden; /* Garante que a imagem n√£o vaze */
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .video-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.12);
        }

        .video-card img {
            width: 100%;
            height: auto;
            display: block;
        }

        .card-content {
            padding: 15px;
        }

        .card-content h3 {
            font-size: 16px;
            margin-top: 0;
            margin-bottom: 10px;
            /* Evita que t√≠tulos longos quebrem o layout */
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            min-height: 38px; /* Altura para 2 linhas */
        }

        .metrics {
            font-size: 13px;
            color: #555;
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 15px;
        }

        .metrics span {
            display: inline-block;
        }
        
        .video-link {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #28a745;
            color: #ffffff;
            text-align: center;
            text-decoration: none;
            font-weight: bold;
            border-radius: 5px;
            box-sizing: border-box;
            transition: background-color 0.2s;
        }

        .video-link:hover {
            background-color: #218838;
        }

    </style>
</head>
<body>

    <div class="container">
        <h1>Ol√° user, Seja bem vindo</h1>

        <form class="search-form" id="searchForm">
            <input type="text" id="nichoInput" class="search-input" placeholder="Digite o nicho que deseja pesquisar..." required>
            <button type="submit" class="search-button">Enviar</button>
        </form>

        <div class="loader" id="loading"></div>

        <div id="results-container"></div>
    </div>

    <script>
        // Seleciona os elementos do DOM
        const searchForm = document.getElementById('searchForm');
        const nichoInput = document.getElementById('nichoInput');
        const resultsContainer = document.getElementById('results-container');
        const loading = document.getElementById('loading');
        
        const webhookUrl = 'https://n8n.oficinahub.xyz/webhook/009e8e27-2464-4060-ad0c-79c97cc79f47';

        // Adiciona o "ouvinte" de evento para o envio do formul√°rio
        searchForm.addEventListener('submit', async (event) => {
            event.preventDefault(); // Impede o recarregamento da p√°gina

            const nicho = nichoInput.value;
            if (!nicho) return; // N√£o faz nada se o campo estiver vazio

            // Limpa resultados anteriores e mostra o carregamento
            resultsContainer.innerHTML = '';
            loading.style.display = 'block';

            try {
                // Envia os dados para o webhook n8n
                const response = await fetch(webhookUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    // Envia o nicho dentro de um objeto JSON
                    // Seu n8n provavelmente espera por algo como: {{ $json.nicho }}
                    body: JSON.stringify({ nicho: nicho })
                });

                if (!response.ok) {
                    throw new Error(`Erro na requisi√ß√£o: ${response.statusText}`);
                }

                // Pega a resposta JSON
                const data = await response.json();
                
                // Processa e exibe os resultados
                displayResults(data);

            } catch (error) {
                console.error('Falha ao buscar dados:', error);
                resultsContainer.innerHTML = `<p style="color: red; text-align: center;">Ocorreu um erro ao buscar os dados. Tente novamente.</p>`;
            
            } finally {
                // Esconde o carregamento
                loading.style.display = 'none';
            }
        });

        function displayResults(data) {
            if (!data || data.length === 0) {
                resultsContainer.innerHTML = `<p style="text-align: center;">Nenhum resultado encontrado.</p>`;
                return;
            }

            // Itera sobre cada item da lista principal
            data.forEach(responseObject => {
                // Pega o v√≠deo de dentro da propriedade "items"
                const video = responseObject.items[0]; 
                
                if (video) {
                    const videoId = video.id;
                    const title = video.snippet.title;
                    // Usando a thumbnail "high" para boa qualidade
                    const thumbnailUrl = video.snippet.thumbnails.high.url; 
                    const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;
                    
                    // Formata os n√∫meros para o padr√£o brasileiro (ex: 1.234.567)
                    const viewCount = parseInt(video.statistics.viewCount).toLocaleString('pt-BR');
                    const likeCount = parseInt(video.statistics.likeCount).toLocaleString('pt-BR');
                    const commentCount = parseInt(video.statistics.commentCount).toLocaleString('pt-BR');
                    
                    // Cria o HTML do card
                    const cardHTML = `
                        <div class="video-card">
                            <img src="${thumbnailUrl}" alt="Thumbnail do v√≠deo">
                            <div class="card-content">
                                <h3>${title}</h3>
                                <div class="metrics">
                                    <span>üëÅÔ∏è ${viewCount}</span>
                                    <span>üëç ${likeCount}</span>
                                    <span>üí¨ ${commentCount}</span>
                                </div>
                                <a href="${videoUrl}" target="_blank" rel="noopener noreferrer" class="video-link">
                                    Ir para o V√≠deo
                                </a>
                            </div>
                        </div>
                    `;
                    
                    // Adiciona o card ao container de resultados
                    resultsContainer.innerHTML += cardHTML;
                }
            });
        }

    </script>
</body>
</html>